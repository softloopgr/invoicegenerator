<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>